Monday

XCreate a main menu to our app using a static table view
XCreate a network controller and implement a method that fetches repositories based on a search term. Instead of pointing the request at the Actual Github API server, use the node script provided in the class repository and point the request at your own machine. Since our apps aren't authenticated with Github yet we will hit the rate limit after 5 unauthenticated calls from our IP. The node script is called server.js. Just run it with your node command in terminal.
XCreate a RepositoryViewController and parse through the JSON returned fromm the server into struct model objects and display the results in a table view.
XAdd a UISearchBar to your RepositoryViewController and fire your network call from there. Tomorrow once we are authenticated we will actually use that search term to get the right data back.


Tuesday

XImplement an OAuth workflow in your app that successfully lets the user authenticate with your app.
XRecreate a NSURLSession with a NSURLSessionConfiguration with the Authorization Header Field matched up with our oath token.
XImplement a UISearchBar on your repo search view controller and modify your repo search fetch method on your network controller to use the search bar’s text. Be sure to only be making authenticated network calls using your oath token!
XDisplay the repo’s they searched for a in the table view
XImplement user defaults to store the authorization token, so it only does the OAuth process once.


Wednesday

XCreate a UserSearchViewController that searches for users, similar to how we are already searching for repositories. Instead of a table view, use a collection view to display the users avatar image and their name.
XUpon clicking on a cell, implement a custom transition, and transition the image clicked on to a UserDetailViewController page that has their picture, name, and whatever other info you want pulled from their API.


Thursday

XImplement Regex in your app. Use it to validate the characters the user types into the search bar. Extend String with this functionality.
XImplement WKWebView in your app. When a user clicks on a repo, show their repo's web page with WKWebView.

Challenges:

Implement the 'My Profile' view controller in your app. This should display info about the currently logged in user (their bio, if they are hirable, their count of public and private repos, etc).
Implement a way for the logged in user to create a repo from the app. Good luck and god bless.
Implement a way for the user to update their bio.

note:nib popup warning user that they will be sent to github
CGAFFINETRANSFORM FOR ALL ANIMATIONS